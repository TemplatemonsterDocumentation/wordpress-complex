@mixin make-col-max-width($size, $columns: $grid-columns) {
	max-width: percentage($size / $columns);
}
@mixin make-grid-columns-max-width($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {

	@each $breakpoint in map-keys($breakpoints) {

		@include media-breakpoint-up($breakpoint) {

			@for $i from 1 through $columns {
				.col-#{$breakpoint}-#{$i} {
					@include make-col-max-width($i, $columns);
				}
			}
		}
	}
}
#tm_builder_outer_content {

	.tm_pb_module.tm_pb_widget_area {
		*:not([class*="col-"]) {
			max-width: none;
		}

		.widget-smart-slider img.sp-image {
			max-width: none !important;
		}

		.about-author_img {
			border-radius: 50%;
		}

		.widget {
			ul {
				margin-bottom: 0;
				padding: 0;
				margin-left: 0;
				list-style: none;

				li {
					padding-top: 0;
					padding-bottom: 0;
					&:before {
						content: none;
					}
					& + li,
					> ul li,
					> ol li {
						margin-top: 11px;
					}
					> ul {
						margin-left: 10px;
					}
				}
			}
		}

		.widget-subscribe {
			&:last-child {
				margin-bottom: 0;
			}
		}

		.widget_recent_entries,
		.widget_recent_comments {
			ul li {
				& + li {
					margin-top: 20px;
				}
			}
		}

		.widget {
			@include make-grid-columns-max-width();
		}
	}
}

